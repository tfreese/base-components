# ===================================================================
# COMMON SPRING BOOT PROPERTIES
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# http://tomcat.apache.org/tomcat-9.0-doc/jdbc-pool.html#Common_Attributes
# ===================================================================

#spring.datasource.url = jdbc:generic:file:db/generic;shutdown=true
#spring.datasource.url = jdbc:generic:mem:mydatabase
#spring.datasource.driver-class-name = org.generic.jdbc.JDBCDriver
#spring.datasource.username = sa
#spring.datasource.password = 

spring.datasource.tomcat.maxActive = 3
spring.datasource.tomcat.maxIdle = 3
spring.datasource.tomcat.minIdle = 1
spring.datasource.tomcat.initialSize = 1

# Max. 5 Sekunden warten auf Connection.
spring.datasource.tomcat.maxWait = 5000 

spring.datasource.tomcat.defaultAutoCommit = false
spring.datasource.tomcat.defaultReadOnly = false

spring.datasource.tomcat.validationQuery = select 1 from INFORMATION_SCHEMA.SYSTEM_USERS

# Nach 3 Sekunden wird die ValidationQuery als ung�ltig interpretiert.
spring.datasource.tomcat.validationQueryTimeout = 3

# Wurde eine Connection vor 60 Sekunden validiert, nicht nochmal validieren.
spring.datasource.tomcat.validationInterval = 60000

# Connections pr�fen, die IDLE sind.
spring.datasource.tomcat.testWhileIdle = true

# Connections pr�fen, die geholt werden.
spring.datasource.tomcat.testOnBorrow = true

# Connections pr�fen, die zur�ckgegeben werden.
spring.datasource.tomcat.testOnReturn = false

# Nach 60 Sekunden eine Connection als "Idle" markieren.
spring.datasource.tomcat.minEvictableIdleTimeMillis = 60000

# Alle 60 Sekunden auf Idle-Connections pr�fen.
spring.datasource.tomcat.timeBetweenEvictionRunsMillis = 60000

# Eine Connection darf max. 1 Stunde (1 * 60 * 60 * 1000) alt werden, 0 = keine Alterung.
spring.datasource.tomcat.maxAge = 3600000

# Entfernen von verwaisten (Timeout) Connections/Langl�ufern.
spring.datasource.tomcat.removeAbandoned = true
spring.datasource.tomcat.logAbandoned = true

# Nach 10 Minuten Connections/Langl�ufer als verwaist markieren.
spring.datasource.tomcat.removeAbandonedTimeout = 600

# Entfernen von verwaisten (Timeout) Connections/Langl�ufer erst ab x% des Poolstands.
spring.datasource.tomcat.abandonWhenPercentageFull = 90

# Class-Prefix: org.apache.tomcat.jdbc.pool.interceptor
# ConnectionState: Caching f�r die Attribute autoCommit, readOnly, transactionIsolation und catalog.
# ResetAbandonedTimer: Jede Query bei Langl�ufern setzt den Abandon-Timer zur�ck.
# StatementFinalizer: Schliesst alle Statments, die durch createStatement, prepareStatement oder prepareCall erzeugt wurden, falls n�tig.
spring.datasource.tomcat.jdbcInterceptors = ConnectionState; ResetAbandonedTimer; StatementFinalizer
