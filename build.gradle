// Tasks im SubModul ausführen: gradle MODUL:clean build

subprojects {
	apply plugin: 'java'
	
    dependencies {
        implementation(platform("de.freese:maven-bom:$version_mavenBom"))
        //implementation("org.springframework.boot:spring-boot-starter")
    }
}

project("base-core") {
	apply plugin: 'java-library'
	description = "Common Classes, Patterns and Interfaces."
	dependencies {
		// api =  scope compile
		api("commons-codec:commons-codec")
		api("io.projectreactor:reactor-core")
		api("javax.xml.bind:jaxb-api")
		api("org.apache.commons:commons-collections4")
		api('org.apache.commons:commons-lang3')
		api("org.slf4j:slf4j-api")
		api("org.springframework:spring-context")
		
		// implementation = scope runtime
		implementation("org.openjdk.jmh:jmh-core")
		implementation("org.openjdk.jmh:jmh-generator-annprocess")

		// runtimeOnly = scope runtime
		runtimeOnly("org.slf4j:jcl-over-slf4j")

		testImplementation("io.github.artsok:rerunner-jupiter")
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.junit.jupiter:junit-jupiter-params")
		testImplementation("org.mockito:mockito-junit-jupiter")
	}
}

project("base-calendar") {
	apply plugin: 'java-library'
	description = "Common Classes for Calendar."
	dependencies {
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.junit.jupiter:junit-jupiter-params")
	}
}

project("base-net") {
	apply plugin: 'java-library'
	description = "Common Protocols and Classes for the Network Layer."
	dependencies {
		api(project(":base-core"))
	
		api("com.jcraft:jsch")
		api("com.sun.mail:jakarta.mail")
		api("commons-net:commons-net")
		api("org.slf4j:slf4j-api")
    
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.slf4j:slf4j-simple")
	}
}

project("base-persistence") {
	apply plugin: 'java-library'
	description = "Common Patterns and Classes for the Persistence Layer."
	dependencies {
		api(project(":base-core"))
		
		api("org.apache.poi:poi-ooxml")
		api("org.apache.commons:commons-dbcp2")
		api("org.apache.tomcat:tomcat-jdbc")
		api("org.springframework.boot:spring-boot-starter-jdbc")
		api("org.springframework.boot:spring-boot-starter-data-jpa")

		compileOnly("javax.servlet:javax.servlet-api")

		testImplementation("com.h2database:h2")
		testImplementation("io.r2dbc:r2dbc-client")
		testImplementation("io.r2dbc:r2dbc-h2")
		testImplementation("io.r2dbc:r2dbc-pool")
		testImplementation("org.assertj:assertj-core")
		testImplementation("org.apache.derby:derby")
		testImplementation("org.hsqldb:hsqldb")
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.junit.jupiter:junit-jupiter-params")
		testImplementation("org.junit.platform:junit-platform-runner")
		testImplementation("org.junit.platform:junit-platform-suite-api")
		testImplementation("org.mockito:mockito-junit-jupiter")
		testImplementation("org.xerial:sqlite-jdbc")
	}
}

project("base-pool") {
	apply plugin: 'java-library'
	description = "Builder für Object-/Connections Pools."
	dependencies {
		api(project(":base-core"))
		
		api("com.zaxxer:HikariCP")
		api("nf.fr.eraasoft:objectpool")
		api("org.apache.commons:commons-dbcp2")
		api("org.apache.commons:commons-pool2")
		api("org.apache.tomcat:tomcat-jdbc")
		
		runtimeOnly("org.slf4j:jcl-over-slf4j")

		testImplementation("com.h2database:h2")
		testImplementation("org.apache.derby:derby")
		testImplementation("org.hsqldb:hsqldb")
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.junit.jupiter:junit-jupiter-params")
		testImplementation("org.slf4j:slf4j-simple")
	}
}

project("base-reports") {
	apply plugin: 'java-library'
	description = "Common Classes for creating Reports or import Office Documents."
	dependencies {
		api(project(":base-core"))
		
		api("com.itextpdf:itextpdf")
		api("commons-io:commons-io")
		api("org.jfree:jfreechart")
		api("org.apache.poi:poi-ooxml")
		api("org.springframework:spring-core")
		api("net.sourceforge.jexcelapi:jxl")
		
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
	}
}

project("base-resourcemap") {
	apply plugin: 'java-library'
	description = "ResoureMaps to use hierarchical ResourceBundles."
	dependencies {
		api(project(":base-core"))
		
		implementation("org.slf4j:slf4j-api")

		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.slf4j:slf4j-simple")
		testImplementation("org.slf4j:jcl-over-slf4j")
		testImplementation("org.springframework:spring-core")
	}
}

project("base-security") {
	apply plugin: 'java-library'
	description = "Common Classes for the Security Layer."
	dependencies {
		api(project(":base-core"))
	
		api("commons-io:commons-io")
		api("org.bouncycastle:bcpg-jdk15on")
		api("org.bouncycastle:bcmail-jdk15on")
		api("org.slf4j:slf4j-api")

		testImplementation("org.junit.jupiter:junit-jupiter-engine")
		testImplementation("org.slf4j:slf4j-simple")
	}
}

project("base-swing") {
	apply plugin: 'java-library'
	apply plugin: 'org.openjfx.javafxplugin'
	apply plugin: 'com.github.ben-manes.versions'
	/*plugins {
		id 'java-library'
		id 'org.openjfx.javafxplugin' version '0.0.8'
	}*/
	description = "Components and Classes for Swing."
	dependencies {
		api(project(":base-net"))
		api(project(":base-resourcemap"))
		
		javafx {
			version = "14"
			modules = [ 'javafx.controls' ]
		}		

		api("commons-io:commons-io")
		api("com.fasterxml.jackson.core:jackson-databind")
		api("com.sun.mail:jakarta.mail")
		api("javax.xml.bind:jaxb-api")
		api("org.apache.commons:commons-collections4")
		//api("org.openjfx:javafx-controls")
		api("org.swinglabs.swingx:swingx-core")
		
		testImplementation("org.junit.jupiter:junit-jupiter-engine")
	}
}

project("base-swing-demo") {
	description = "Demo for the Swing Components."
	dependencies {
		implementation(project(":base-swing"))

		runtimeOnly("org.slf4j:slf4j-simple")
	}
}
